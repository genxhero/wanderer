{"ast":null,"code":"var _jsxFileName = \"/Users/aarongoddard/Documents/Coding/wayfarer/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport jwt_decode from 'jwt-decode';\nimport * as APIUtil from './util/session_util';\nimport * as VehicleAPIUtil from './util/vehicles_util'; //Components\n\nimport configureStore from './store/store';\nimport Root from './root';\nimport * as serviceWorker from './serviceWorker';\ndocument.addEventListener('DOMContentLoaded', function () {\n  var store = configureStore(); //check for token\n\n  if (localStorage.jwtToken) {\n    //Set auth token header auth\n    APIUtil.setAuthToken(localStorage.jwtToken); // Decode token and get user info and expiration\n\n    var decoded = jwt_decode(localStorage.jwtToken); // Set user and isAuthenticated\n\n    store.dispatch(APIUtil.setCurrentUser(decoded)); //Check for expired token\n\n    var currentTime = Date.now() / 1000;\n\n    if (decoded.exp < currentTime) {\n      //Logout User\n      store.dispatch(APIUtil.logoutUser()); //Redirect to Login\n\n      window.location.href = '/login';\n    }\n  }\n\n  var root = document.getElementById('root');\n  ReactDOM.render(React.createElement(Root, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), root);\n  serviceWorker.register();\n}); //Commenting out the default code now that we're building our actual root\n// ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/aarongoddard/Documents/Coding/wayfarer/frontend/src/index.js"],"names":["React","ReactDOM","jwt_decode","APIUtil","VehicleAPIUtil","configureStore","Root","serviceWorker","document","addEventListener","store","localStorage","jwtToken","setAuthToken","decoded","dispatch","setCurrentUser","currentTime","Date","now","exp","logoutUser","window","location","href","root","getElementById","render","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAO,KAAKC,cAAZ,MAAgC,sBAAhC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAIC,KAAK,GAAGL,cAAc,EAA1B,CADkD,CAElD;;AACA,MAAIM,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACAT,IAAAA,OAAO,CAACU,YAAR,CAAqBF,YAAY,CAACC,QAAlC,EAFyB,CAGzB;;AACA,QAAME,OAAO,GAAGZ,UAAU,CAACS,YAAY,CAACC,QAAd,CAA1B,CAJyB,CAKzB;;AACAF,IAAAA,KAAK,CAACK,QAAN,CAAeZ,OAAO,CAACa,cAAR,CAAuBF,OAAvB,CAAf,EANyB,CAQzB;;AACA,QAAMG,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,QAAIL,OAAO,CAACM,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAP,MAAAA,KAAK,CAACK,QAAN,CAAeZ,OAAO,CAACkB,UAAR,EAAf,EAF6B,CAG7B;;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;AACF;;AAED,MAAMC,IAAI,GAAGjB,QAAQ,CAACkB,cAAT,CAAwB,MAAxB,CAAb;AACAzB,EAAAA,QAAQ,CAAC0B,MAAT,CAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAwCe,IAAxC;AACAlB,EAAAA,aAAa,CAACqB,QAAd;AACD,CAxBD,E,CA0BA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport jwt_decode from 'jwt-decode';\nimport * as APIUtil from './util/session_util';\nimport * as VehicleAPIUtil from './util/vehicles_util';\n\n//Components\nimport configureStore from './store/store';\nimport Root from './root';\nimport * as serviceWorker from './serviceWorker';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store = configureStore();\n  //check for token\n  if (localStorage.jwtToken) {\n    //Set auth token header auth\n    APIUtil.setAuthToken(localStorage.jwtToken);\n    // Decode token and get user info and expiration\n    const decoded = jwt_decode(localStorage.jwtToken);\n    // Set user and isAuthenticated\n    store.dispatch(APIUtil.setCurrentUser(decoded));\n\n    //Check for expired token\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      //Logout User\n      store.dispatch(APIUtil.logoutUser());\n      //Redirect to Login\n      window.location.href = '/login';\n    }\n  }\n\n  const root = document.getElementById('root');\n  ReactDOM.render(<Root store={store} />, root);\n  serviceWorker.register();\n});\n\n//Commenting out the default code now that we're building our actual root\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}