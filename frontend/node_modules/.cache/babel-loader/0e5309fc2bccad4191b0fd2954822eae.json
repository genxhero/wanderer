{"ast":null,"code":"var _jsxFileName = \"/Users/aarongoddard/Documents/Coding/wayfarer/frontend/src/util/route_util.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nvar Auth = function Auth(_ref) {\n  var Component = _ref.component,\n      path = _ref.path,\n      loggedIn = _ref.loggedIn,\n      exact = _ref.exact;\n  return React.createElement(Route, {\n    path: path,\n    exact: exact,\n    render: function render(props) {\n      return !loggedIn ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar Protected = function Protected(_ref2) {\n  var Component = _ref2.component,\n      path = _ref2.path,\n      loggedIn = _ref2.loggedIn,\n      exact = _ref2.exact;\n  return React.createElement(Route, {\n    path: path,\n    exact: exact,\n    render: function render(props) {\n      return loggedIn ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedIn: Boolean(state.session.id)\n  };\n};\n\nexport var AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport var ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","map":{"version":3,"sources":["/Users/aarongoddard/Documents/Coding/wayfarer/frontend/src/util/route_util.js"],"names":["React","connect","Route","Redirect","withRouter","Auth","Component","component","path","loggedIn","exact","props","Protected","mapStateToProps","state","Boolean","session","id","AuthRoute","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,MAA+BC,QAA/B,QAA+BA,QAA/B;AAAA,MAAyCC,KAAzC,QAAyCA,KAAzC;AAAA,SACX,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAmB,IAAA,KAAK,EAAEE,KAA1B;AAAiC,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACvC,CAACF,QAAD,GACE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJmC;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW;AAAA,CAAb;;AAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAcN,SAAd,SAAGC,SAAH;AAAA,MAAyBC,IAAzB,SAAyBA,IAAzB;AAAA,MAA+BC,QAA/B,SAA+BA,QAA/B;AAAA,MAAyCC,KAAzC,SAAyCA,KAAzC;AAAA,SAChB,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAmB,IAAA,KAAK,EAAEE,KAA1B;AAAiC,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACvCF,QAAQ,GACN,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM,GAGJ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJmC;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB;AAAA,CAAlB;;AAUA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAC3B;AAAEL,IAAAA,QAAQ,EAAEM,OAAO,CAACD,KAAK,CAACE,OAAN,CAAcC,EAAf;AAAnB,GAD2B;AAAA,CAA7B;;AAIA,OAAO,IAAMC,SAAS,GAAGd,UAAU,CAACH,OAAO,CAACY,eAAD,CAAP,CAAyBR,IAAzB,CAAD,CAA5B;AAEP,OAAO,IAAMc,cAAc,GAAGf,UAAU,CAACH,OAAO,CAACY,eAAD,CAAP,CAAyBD,SAAzB,CAAD,CAAjC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to=\"/\" />\n      )\n  )} />\n);\n\nconst Protected = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    loggedIn ? (\n      <Component {...props} />\n    ) : (\n        <Redirect to=\"/login\" />\n      )\n  )} />\n);\n\nconst mapStateToProps = state => (\n  { loggedIn: Boolean(state.session.id) }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));"]},"metadata":{},"sourceType":"module"}